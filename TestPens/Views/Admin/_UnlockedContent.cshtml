@using TestPens.Models.Simple
@using TestPens.Service.Abstractions
@model (Permissions, Dictionary<Tier, List<PersonModel>>, string)

@{
    int id = 0;
}

<section class="editable-tierlist">
    @foreach (var tierGroup in Model.Item2)
    {
        (string mainColor, string secColor) = tierGroup.Key.GetColors();
        <style>
            .tier-person[data-tier="@tierGroup.Key"] .tier-circle {
            background: linear-gradient(90deg, @mainColor, @secColor);
            }

            .tier-title[data-tier="@tierGroup.Key"] {
            background: linear-gradient(90deg, @mainColor, @secColor );
            }
        </style>
        <section class="tier-block">
            <h2 class="tier-title" data-tier="@tierGroup.Key">
                @tierGroup.Key.GetName() Tier
            </h2>
            <ul class="tier-people" data-tier="@tierGroup.Key">

                @{
                    int it = 1;
                    foreach (var person in tierGroup.Value)
                    {
                        <li id="uid-@id" class="tier-person" data-inactive="@person.InDrop" data-tier="@tierGroup.Key" data-video="@person.VideoLink" data-avatar="@person.AvatarUrl" onclick="openModal(this)">
                            <span class="tier-circle"></span>@person.Nickname</li>
                        it++;
                        id++;
                    }
                }
            </ul>
        </section>
    }
</section>

@{
    if (Model.Item1.HasFlag(Permissions.ChangePositions))
    {
        <script src="/js/Sortable.min.js">
        </script>
        <script src="/js/adminPanelPosition.js">
        </script>
    }

    if (Model.Item1.HasFlag(Permissions.MembersEdit))
    {
        <div class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2>Редактирование пользователя</h2>
                    <div class="avatar">
                        <img src="@($"/avatars/Art.png")"/>
                    </div>
                </div>
                <div class="modal-body">
                    <label for="nickname">Никнейм:</label>
                    <input type="text" id="nickname" placeholder="Введите никнейм">

                    <div>
                        <label for="inDrop">В дропе:</label>
                        <input type="checkbox" id="inDrop">
                    </div>

                    <label for="videoLink">Ссылка на видео:</label>
                    <input type="url" id="videoLink" placeholder="Введите ссылку">

                    <label for="avatarUrl">Ссылка на аватарку:</label>
                    <input type="url" id="avatarUrl" placeholder="Введите ссылку">
                </div>
                <div class="modal-footer">
                    <button onclick="closeModal()" class="cancel-button">Отмена</button>
                    <button onclick="playerPropertiesUpdate()" class="save-button">Сохранить</button>
                </div>
            </div>
        </div>

        <script src="/js/adminPanelMemberUpdate.js">
        </script>

        <script>
            function onOpenModal(modal, object) {
                modal.dataset.personId = object.id;

                const player = getPlayerObject(object);

                document.getElementById("nickname").value = player.Nickname;
                document.getElementById("inDrop").checked = player.InDrop;
                document.getElementById("videoLink").value = player.VideoLink;
                document.getElementById("avatarUrl").value = player.AvatarUrl;
            }

            function onCloseModal(modal) {
            }
        </script>
    }
}