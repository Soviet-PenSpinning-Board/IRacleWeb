@using TestPens.Service.Abstractions
@model (Permissions, IReadOnlyDictionary<Tier, List<PersonModel>>, IReadOnlyDictionary<Guid, BattleModel>)

@if (Model.Item1.HasFlag(Permissions.ChangeProperties) || Model.Item1.HasFlag(Permissions.ChangePositions) || Model.Item1.HasFlag(Permissions.StartBattles))
{
    <partial name="_TierListDataHelperPartial" model="@Model.Item2" />

    <h2>Редактируемый тирлист:</h2>

    <section class="editable-tierlist">
        @foreach (var tierGroup in Model.Item2)
        {
            (string mainColor, string secColor) = tierGroup.Key.GetColors();
            <section class="tier-block">
                <h2 class="tier-title" tier-background-gradient data-tier="@tierGroup.Key">
                    @tierGroup.Key.GetName() Tier
                </h2>
                <ul class="tier-people" data-tier="@tierGroup.Key">

                    @{
                        int it = 1;
                        foreach (var person in tierGroup.Value)
                        {
                            <li id="@person.Guid" class="tier-person" data-inactive="@person.InDrop" onclick="openModal(this)">
                                <span class="tier-circle" tier-background-gradient data-tier="@tierGroup.Key"></span>@person.Nickname</li>
                            it++;
                        }
                    }
                </ul>
            </section>
        }
    </section>
}

@if (Model.Item1.HasFlag(Permissions.GlobalMember))
{
    <h2>Добавление нового человека</h2>
    <div class="new-person">
        <div>
            <p>Никнейм:</p>
            <input class="input-field" autocomplete="off" type="text" id="nickname-new-person" placeholder="Введите никнейм">
        </div>

        <div>
            <p>Ссылка на видео:</p>
            <input class="input-field" autocomplete="off" type="url" id="videoLink-new-person" placeholder="Введите ссылку">
        </div>

        <div>
            <p>Ссылка на аватарку:</p>
            <input class="input-field" autocomplete="off" type="url" id="avatarUrl-new-person" placeholder="Введите ссылку">
        </div>

        <button id="addNewPerson" class="save-button" onclick="CreateNewPerson()">Сохранить</button>
    </div>
}


@if (Model.Item1.HasFlag(Permissions.StartBattles))
{
    <h2>Добавление нового баттла</h2>

    <h4><i>Ссылку можно оставить пустой, тогда будут использованы закрепленные комбы участников</i></h4>

    <div class="battle-card-example">
        <div class="battle-content">
            <div class="participant createBattleExample">
                <div class="avatarBattle">
                    <img src="/avatars/Art.png" alt="Левый участник" />
                </div>
                <h3><span class="tier-circle" tier-background-gradient></span>Ник1</h3>
                <input type="url" autocomplete="off" class="battle-link" placeholder="Ссылка для левого участника" />
            </div>
            <span class="vs">VS</span>
            <div class="participant createBattleExample">
                <div class="avatarBattle">
                    <img src="/avatars/Art.png" alt="Ник2" />
                </div>
                <h3><span class="tier-circle" tier-background-gradient></span>Ник2</h3>
                <input type="url" autocomplete="off" class="battle-link" placeholder="Ссылка для правого участника" />
            </div>
        </div>
    </div>
    <button id="create-battle-button">Добавить баттл</button>
    <button class="cancel-button" onclick="resetBattles()">Сбросить</button>

}
@if (Model.Item1.HasFlag(Permissions.EndBattles))
{
    <h2>Активные баттлы</h2>
    <partial name="_BattleGroupPartial" model="@((Model.Item3, false))" />
}

@{
    if (Model.Item1.HasFlag(Permissions.MembersEdit) || Model.Item1.HasFlag(Permissions.StartBattles))
    {
        <div class="modal" id="mainModal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2>Редактирование</h2>
                    <div class="avatarModal">
                        <img src=""/>
                    </div>
                </div>
                <div class="modal-body">
                    @if (Model.Item1.HasFlag(Permissions.MembersEdit))
                    {
                        <label for="nickname">Никнейм:</label>
                        <input class="input-field" autocomplete="off" type="text" id="nickname" placeholder="Введите никнейм">

                        <div>
                            <label for="inDrop">В дропе:</label>
                            <input class="input-field" type="checkbox" id="inDrop">
                        </div>

                        <label for="videoLink">Ссылка на видео:</label>
                        <input class="input-field" autocomplete="off" type="url" id="videoLink" placeholder="Введите ссылку">

                        <label for="avatarUrl">Ссылка на аватарку:</label>
                        <input class="input-field" autocomplete="off" type="url" id="avatarUrl" placeholder="Введите ссылку">
                    }
                    @if (Model.Item1.HasFlag(Permissions.StartBattles))
                    {
                        <div>
                            <label for="startBattle">Выбрать для баттла:</label>
                            <input type="checkbox" id="startBattle">
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button onclick="closeModal()" class="cancel-button">Отмена</button>
                    <button onclick="playerPropertiesUpdate()" class="save-button">Сохранить</button>
                </div>
            </div>
        </div>
    }

    @if (Model.Item1.HasFlag(Permissions.EndBattles))
    {
        <div class="modal" id="battleModal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2>Кто победил?</h2>
                </div>
                <div class="modal-body">
                    <button class="result-button left-win" onclick="setBattleResult('LeftWin')">
                        Победил левый
                    </button>
                    <button class="result-button draw" onclick="setBattleResult('Draw')">
                        Ничья
                    </button>
                    <button class="result-button right-win" onclick="setBattleResult('RightWin')">
                        Победил правый
                    </button>
                </div>
                <div class="modal-footer">
                    <button class="cancel-button" onclick="closeModal('battleModal')">Отмена</button>
                </div>
            </div>
        </div>
    }

    @if (Model.Item1.HasFlag(Permissions.ChangePositions))
    {
        <script src="/js/libs/Sortable.min.js">
        </script>
        <script src="/js/adminPanelPosition.js">
        </script>
    }

    @if (Model.Item1.HasFlag(Permissions.MembersEdit))
    {
        <script src="/js/adminPanelMemberUpdate.js">
        </script>
    }

    @if (Model.Item1.HasFlag(Permissions.StartBattles))
    {
        <script src="/js/adminPanelStartBattles.js">
        </script>
    }

    @if (Model.Item1.HasFlag(Permissions.EndBattles))
    {
        <script src="/js/adminPanelEndBattles.js">
        </script>
    }

    @if (Model.Item1.HasFlag(Permissions.GlobalMember))
    {
        <script src="/js/adminPanelGlobalMember.js">
        </script>
    }
}